{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liam\\\\Desktop\\\\create-react-app-master\\\\create-react-app-master\\\\my-app\\\\client\\\\src\\\\components\\\\SongSearchBar.js\";\nimport React from 'react';\nimport '../styleSheets/SongSearchBar.css';\nimport { Container, Navbar, NavbarBrand, Row, Jumbotron, InputGroup, InputGroupAddon, Button, FormGroup, ListGroup, ListGroupItem, Input, Col } from 'reactstrap';\n\nclass SongSearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSongList = () => {\n      fetch('/api/song').then(res => res.json()).then(res => {\n        var songList = res.map(r => r.song_title);\n        this.setState({\n          songList\n        });\n      });\n    };\n\n    this.getSong = song => {\n      fetch(\"/api/song/\".concat(song)).then(res => res.json()).then(res => {\n        var songList = res.map((val, i, res) => {\n          return [\"Song Title: \" + val.song_title + \", \", \"Popularity: \" + val.popularity + \", \", \"Release Year: \" + val.year + \", \", \"Duration: \" + val.duration + \", \"];\n        });\n        this.setState({\n          songList\n        });\n      });\n    };\n\n    this.getSongByYear = year => {\n      fetch(\"/api/song/year\".concat(year)).then(res => res.json()).then(res => {\n        var songYearList = res.map((val, i, res) => {\n          return [\"Song Title: \" + val.song_title + \", \", \"Artist: \" + val.artist_id + \", \", \"Release Year: \" + val.year + \", \", \"Duration: \" + val.duration + \", \", \"Popularity: \" + val.popularity + \", \", \"Dance: \" + val.dance_name + \", \", \"Dance Style: \" + val.dance_style + \", \", \"Album: \" + val.album_title];\n        });\n        this.setState({\n          songYearList\n        });\n      });\n    };\n\n    this.state = {\n      year: '',\n      song: '',\n      artist: '',\n      songList: [],\n      songYearList: []\n    }; //this.handleClick = this.handleClick.bind(this);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.searchSong = this.searchSong.bind(this);\n    this.searchSongByYear = this.searchSongByYear.bind(this);\n  }\n  /*handleClick(event) {\r\n    this.setState({ [event.target.name]: '' });\r\n  }*/\n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  searchSong(event) {\n    this.getSong(this.state.song);\n    alert('A search was submitted: ' + this.state.song + ' by ' + this.state.artist);\n    event.preventDefault();\n  }\n\n  searchSongByYear(event) {\n    this.getSongByYear(this.state.year);\n    alert('A search was submitted: for songs realeased in ' + this.state.year);\n    event.preventDefault();\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.searchSong,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"song\",\n      placeholder: \"Search for a Song by Title ...\",\n      className: \"field\",\n      type: \"text\",\n      value: this.state.song //onClick={this.handleClick}\n      ,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \" & \"), React.createElement(\"input\", {\n      name: \"artist\",\n      placeholder: \"Search for a Song by Artist ...\",\n      className: \"field\",\n      type: \"text\",\n      value: this.state.artist //onClick={this.handleClick}\n      ,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"button\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(ListGroup, {\n      name: \"songList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.state.songList.length === 0 && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"No Songs Queried\"), this.state.songList.map((song, i) => React.createElement(\"p\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, song, \" \")), \">\")))), React.createElement(\"form\", {\n      onSubmit: this.searchSongByYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Search for a Song by Year\"), React.createElement(\"input\", {\n      name: \"year\",\n      placeholder: \"Search for a Song by year ...\",\n      className: \"field\",\n      type: \"text\",\n      value: this.state.year //onClick={this.handleClick}\n      ,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"button\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(ListGroup, {\n      name: \"songYearList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.state.songYearList.length === 0 && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"No Songs Queried\"), this.state.songYearList.map((song, i) => React.createElement(\"p\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, song, \" \")), \">\"))));\n  }\n\n}\n\nexport default SongSearchBar;","map":{"version":3,"sources":["C:\\Users\\Liam\\Desktop\\create-react-app-master\\create-react-app-master\\my-app\\client\\src\\components\\SongSearchBar.js"],"names":["React","Container","Navbar","NavbarBrand","Row","Jumbotron","InputGroup","InputGroupAddon","Button","FormGroup","ListGroup","ListGroupItem","Input","Col","SongSearchBar","Component","constructor","props","getSongList","fetch","then","res","json","songList","map","r","song_title","setState","getSong","song","val","i","popularity","year","duration","getSongByYear","songYearList","artist_id","dance_name","dance_style","album_title","state","artist","handleChange","bind","searchSong","searchSongByYear","event","target","name","value","alert","preventDefault","componentDidMount","render","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../styleSheets/SongSearchBar.css';\r\n\r\nimport {\r\n  Container,\r\n  Navbar,\r\n  NavbarBrand,\r\n  Row,\r\n  Jumbotron,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Button,\r\n  FormGroup,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Input,\r\n  Col\r\n} from 'reactstrap';\r\n\r\nclass SongSearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      year: '',\r\n      song: '',\r\n      artist: '',\r\n      songList: [],\r\n      songYearList: []\r\n    };\r\n\r\n    //this.handleClick = this.handleClick.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.searchSong = this.searchSong.bind(this);\r\n    this.searchSongByYear = this.searchSongByYear.bind(this);\r\n  }\r\n\r\n\r\n\r\n  /*handleClick(event) {\r\n    this.setState({ [event.target.name]: '' });\r\n  }*/\r\n\r\n  handleChange(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n\r\n  getSongList = () => {\r\n    fetch('/api/song')\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      var songList = res.map(r => r.song_title);\r\n      this.setState({ songList });\r\n    });\r\n  };\r\n\r\n  getSong = (song) => {\r\n    fetch(`/api/song/${song}`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      var songList = res.map((val, i, res) => {\r\n\r\n        return [\"Song Title: \" + val.song_title + \", \", \"Popularity: \" + val.popularity + \", \",\r\n                \"Release Year: \" + val.year + \", \", \"Duration: \" + val.duration + \", \"];\r\n      });\r\n      this.setState({ songList });\r\n    });\r\n  }\r\n\r\n  getSongByYear = (year) => {\r\n    fetch(`/api/song/year${year}`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      var songYearList = res.map((val, i, res) => {\r\n\r\n        return [\"Song Title: \" + val.song_title + \", \", \"Artist: \" + val.artist_id + \", \",\r\n                \"Release Year: \" + val.year + \", \", \"Duration: \" + val.duration + \", \",\r\n                \"Popularity: \" + val.popularity + \", \", \"Dance: \" + val.dance_name + \", \",\r\n                \"Dance Style: \" + val.dance_style + \", \", \"Album: \" + val.album_title];\r\n      });\r\n      this.setState({ songYearList });\r\n    });\r\n  }\r\n\r\n  searchSong(event) {\r\n\r\n    this.getSong(this.state.song);\r\n\r\n    alert(\r\n      'A search was submitted: ' + this.state.song + ' by ' + this.state.artist\r\n    );\r\n    event.preventDefault();\r\n  }\r\n\r\n  searchSongByYear(event) {\r\n\r\n    this.getSongByYear(this.state.year);\r\n    alert(\r\n      'A search was submitted: for songs realeased in ' + this.state.year\r\n    );\r\n    event.preventDefault();\r\n  }\r\n\r\n  componentDidMount () {\r\n    \r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.searchSong}>\r\n          <div>\r\n            <input\r\n              name=\"song\"\r\n              placeholder=\"Search for a Song by Title ...\"\r\n              className=\"field\"\r\n              type=\"text\"\r\n              value={this.state.song}\r\n              //onClick={this.handleClick}\r\n              onChange={this.handleChange}\r\n            />\r\n            <p> &amp; </p>\r\n            <input\r\n              name=\"artist\"\r\n              placeholder=\"Search for a Song by Artist ...\"\r\n              className=\"field\"\r\n              type=\"text\"\r\n              value={this.state.artist}\r\n              //onClick={this.handleClick}\r\n              onChange={this.handleChange}\r\n            />\r\n            <input className=\"button\" type=\"submit\" value=\"Submit\" />\r\n            <ListGroup name=\"songList\">\r\n              <ListGroupItem>\r\n                  { this.state.songList.length === 0 && <p>No Songs Queried</p> }\r\n                  { this.state.songList.map((song, i) => <p key={i}>{song} </p>) }>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </div>\r\n        </form>\r\n\r\n        <form onSubmit={this.searchSongByYear}>\r\n          <h2>Search for a Song by Year</h2>\r\n          <input\r\n              name=\"year\"\r\n              placeholder=\"Search for a Song by year ...\"\r\n              className=\"field\"\r\n              type=\"text\"\r\n              value={this.state.year}\r\n              //onClick={this.handleClick}\r\n              onChange={this.handleChange}\r\n            />\r\n            <input className=\"button\" type=\"submit\" value=\"Submit\" />\r\n            <ListGroup name=\"songYearList\">\r\n              <ListGroupItem>\r\n                  { this.state.songYearList.length === 0 && <p>No Songs Queried</p> }\r\n                  { this.state.songYearList.map((song, i) => <p key={i}>{song} </p>) }>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SongSearchBar;\r\n"]},"metadata":{},"sourceType":"module"}