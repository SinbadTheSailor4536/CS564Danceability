{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liam\\\\Desktop\\\\create-react-app-master\\\\create-react-app-master\\\\my-app\\\\client\\\\src\\\\components\\\\DanceSongCount.js\";\nimport React from 'react';\nimport '../styleSheets/SongSearchBar.css';\nimport { Container, Navbar, NavbarBrand, Row, Jumbotron, InputGroup, InputGroupAddon, Button, FormGroup, ListGroup, ListGroupItem, Input, Col } from 'reactstrap';\n\nclass DanceSongCount extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDanceList = () => {\n      fetch('/api/dance').then(res => res.json()).then(res => {\n        var danceList = res.map(r => r.dancename);\n        this.setState({\n          danceList\n        });\n      });\n    };\n\n    this.getDanceSongCount = danceName => {\n      fetch(\"/api/dance/\".concat(danceName)).then(res => res.json()).then(res => {\n        var danceCountList = res.map((val, i, res) => {\n          return [\"Dance: \" + val.dancename + \", \", \"Count: \" + val.count];\n        });\n        this.setState({\n          danceCountList\n        });\n      });\n    };\n\n    this.state = {\n      danceCountList: [],\n      danceList: [],\n      danceName: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.countSongs = this.countSongs.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  countSongs(event) {\n    this.getDanceSongCount(this.state.danceName);\n    alert('A search was submitted: Dance Name: ' + this.state.danceName);\n    event.preventDefault();\n  }\n\n  componentDidMount() {\n    this.getDanceList();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Find how many songs are available for a Dance: \"), React.createElement(\"form\", {\n      onSubmit: this.countSongs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"danceName\",\n      value: this.state.danceName,\n      placeholder: \"Select a Dance\",\n      type: \"select\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.danceList.length === 0 && React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"No Dance Selected yet.\"), this.state.danceList.length > 0 && React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Select a Dance.\"), this.state.danceList.map((dance, i) => React.createElement(\"option\", {\n      name: \"dances\",\n      key: this.state.danceList[i],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, dance))), React.createElement(Input, {\n      className: \"button\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(ListGroup, {\n      name: \"danceCountList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.danceCountList.length === 0 && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Number of Songs not Assessed for any Dance\"), this.state.danceCountList.map((dance, i) => React.createElement(\"p\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, dance, \" \")), \">\")));\n  }\n\n}\n\nexport default DanceSongCount;","map":{"version":3,"sources":["C:\\Users\\Liam\\Desktop\\create-react-app-master\\create-react-app-master\\my-app\\client\\src\\components\\DanceSongCount.js"],"names":["React","Container","Navbar","NavbarBrand","Row","Jumbotron","InputGroup","InputGroupAddon","Button","FormGroup","ListGroup","ListGroupItem","Input","Col","DanceSongCount","Component","constructor","props","getDanceList","fetch","then","res","json","danceList","map","r","dancename","setState","getDanceSongCount","danceName","danceCountList","val","i","count","state","handleChange","bind","countSongs","event","target","name","value","alert","preventDefault","componentDidMount","render","length","dance"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kCAAP;AAEA,SACEC,SADF,EAEEC,MAFF,EAGEC,WAHF,EAIEC,GAJF,EAKEC,SALF,EAMEC,UANF,EAOEC,eAPF,EAQEC,MARF,EASEC,SATF,EAUEC,SAVF,EAWEC,aAXF,EAYEC,KAZF,EAaEC,GAbF,QAcO,YAdP;;AAgBA,MAAMC,cAAN,SAA6Bd,KAAK,CAACe,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgBnBC,YAhBmB,GAgBJ,MAAM;AACnBC,MAAAA,KAAK,CAAC,YAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMC,GAAG,IAAI;AACX,YAAIE,SAAS,GAAGF,GAAG,CAACG,GAAJ,CAAQC,CAAC,IAAIA,CAAC,CAACC,SAAf,CAAhB;AACA,aAAKC,QAAL,CAAc;AAAEJ,UAAAA;AAAF,SAAd;AACD,OALD;AAMD,KAvBkB;;AAAA,SAmCnBK,iBAnCmB,GAmCEC,SAAD,IAAe;AAC/BV,MAAAA,KAAK,sBAAeU,SAAf,EAAL,CACCT,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMC,GAAG,IAAI;AACb,YAAIS,cAAc,GAAGT,GAAG,CAACG,GAAJ,CAAQ,CAACO,GAAD,EAAMC,CAAN,EAASX,GAAT,KAAiB;AAE5C,iBAAO,CAAC,YAAYU,GAAG,CAACL,SAAhB,GAA4B,IAA7B,EAAmC,YAAYK,GAAG,CAACE,KAAnD,CAAP;AACD,SAHoB,CAArB;AAIA,aAAKN,QAAL,CAAc;AAAEG,UAAAA;AAAF,SAAd;AACD,OARC;AASH,KA7CkB;;AAEjB,SAAKI,KAAL,GAAa;AACTJ,MAAAA,cAAc,EAAE,EADP;AAETP,MAAAA,SAAS,EAAE,EAFF;AAGTM,MAAAA,SAAS,EAAE;AAHF,KAAb;AAMA,SAAKM,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,SAAKX,QAAL,CAAc;AAAE,OAACW,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAApC,KAAd;AACD;;AAWDJ,EAAAA,UAAU,CAACC,KAAD,EAAQ;AAEhB,SAAKV,iBAAL,CAAuB,KAAKM,KAAL,CAAWL,SAAlC;AAEAa,IAAAA,KAAK,CACD,yCAAyC,KAAKR,KAAL,CAAWL,SADnD,CAAL;AAGES,IAAAA,KAAK,CAACK,cAAN;AACH;;AAcDC,EAAAA,iBAAiB,GAAI;AACnB,SAAK1B,YAAL;AACD;;AAED2B,EAAAA,MAAM,GAAG;AACP,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADJ,EAEI;AAAM,MAAA,QAAQ,EAAE,KAAKR,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWL,SAA1C;AAAqD,MAAA,WAAW,EAAC,gBAAjE;AAAkF,MAAA,IAAI,EAAC,QAAvF;AAAgG,MAAA,QAAQ,EAAE,KAAKM,YAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKD,KAAL,CAAWX,SAAX,CAAqBuB,MAArB,KAAgC,CAAhC,IAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADvC,EAEE,KAAKZ,KAAL,CAAWX,SAAX,CAAqBuB,MAArB,GAA8B,CAA9B,IAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFrC,EAGE,KAAKZ,KAAL,CAAWX,SAAX,CAAqBC,GAArB,CAAyB,CAACuB,KAAD,EAAQf,CAAR,KAAc;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,GAAG,EAAE,KAAKE,KAAL,CAAWX,SAAX,CAAqBS,CAArB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqDe,KAArD,CAAvC,CAHF,CADJ,EAMI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,QAAjB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAwC,MAAA,KAAK,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAFJ,EAUI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKb,KAAL,CAAWJ,cAAX,CAA0BgB,MAA1B,KAAqC,CAArC,IAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADhD,EAEM,KAAKZ,KAAL,CAAWJ,cAAX,CAA0BN,GAA1B,CAA8B,CAACuB,KAAD,EAAQf,CAAR,KAAc;AAAG,MAAA,GAAG,EAAEA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYe,KAAZ,MAA5C,CAFN,MADF,CAVJ,CADJ;AAmBD;;AAxE0C;;AA2E7C,eAAejC,cAAf","sourcesContent":["import React from 'react';\r\nimport '../styleSheets/SongSearchBar.css';\r\n\r\nimport {\r\n  Container,\r\n  Navbar,\r\n  NavbarBrand,\r\n  Row,\r\n  Jumbotron,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Button,\r\n  FormGroup,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Input,\r\n  Col\r\n} from 'reactstrap';\r\n\r\nclass DanceSongCount extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        danceCountList: [],\r\n        danceList: [],\r\n        danceName: ''\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.countSongs = this.countSongs.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n\r\n  getDanceList = () => {\r\n    fetch('/api/dance')\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      var danceList = res.map(r => r.dancename);\r\n      this.setState({ danceList });\r\n    });\r\n  };\r\n\r\n  countSongs(event) {\r\n\r\n    this.getDanceSongCount(this.state.danceName);\r\n\r\n    alert(\r\n        'A search was submitted: Dance Name: ' + this.state.danceName\r\n      );\r\n      event.preventDefault();\r\n  }\r\n\r\n  getDanceSongCount = (danceName) => {\r\n      fetch(`/api/dance/${danceName}`)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n      var danceCountList = res.map((val, i, res) => {\r\n\r\n        return [\"Dance: \" + val.dancename + \", \", \"Count: \" + val.count];\r\n      });\r\n      this.setState({ danceCountList });\r\n    });\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getDanceList();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <h2>Find how many songs are available for a Dance: </h2>\r\n            <form onSubmit={this.countSongs}>\r\n                <Input name=\"danceName\" value={this.state.danceName} placeholder=\"Select a Dance\" type=\"select\" onChange={this.handleChange}>\r\n                { this.state.danceList.length === 0 && <option>No Dance Selected yet.</option> }\r\n                { this.state.danceList.length > 0 && <option>Select a Dance.</option> }\r\n                { this.state.danceList.map((dance, i) => <option name=\"dances\" key={this.state.danceList[i]}>{dance}</option>) }\r\n                </Input>\r\n                <Input className=\"button\" type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n            <ListGroup name=\"danceCountList\">\r\n              <ListGroupItem>\r\n                  { this.state.danceCountList.length === 0 && <p>Number of Songs not Assessed for any Dance</p> }\r\n                  { this.state.danceCountList.map((dance, i) => <p key={i}>{dance} </p>) }>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DanceSongCount;"]},"metadata":{},"sourceType":"module"}