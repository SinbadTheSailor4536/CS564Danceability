{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liam\\\\Desktop\\\\create-react-app-master\\\\create-react-app-master\\\\my-app\\\\client\\\\src\\\\components\\\\DistinctSongSearchBar.js\";\nimport React from 'react';\nimport '../styleSheets/DistinctSongSearchBar.css';\nimport { Container, Navbar, NavbarBrand, Row, Jumbotron, InputGroup, InputGroupAddon, Button, FormGroup, ListGroup, ListGroupItem, Input, Col } from 'reactstrap';\n\nclass DistinctSongSearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSongDistinct = songTitle => {\n      fetch(\"/api/song/distinct/\".concat(songTitle)).then(res => res.json()).then(res => {\n        var distinctSongList = res.map((val, i, res) => {\n          return [\"Song Title: \" + val.song_title + \", \", \"Artist: \" + val.artist_name + \", \", \"Release Year: \" + val.year + \", \", \"Duration: \" + val.duration + \", \", \"Popularity: \" + val.popularity + \", \", \"Dance: \" + val.dancename + \", \", \"Dance Style: \" + val.dancestyle + \", \", \"Album: \" + val.album_title];\n        });\n        this.setState({\n          distinctSongList\n        });\n      });\n    };\n\n    this.state = {\n      songTitle: '',\n      distinctSongList: []\n    }; //this.handleClick = this.handleClick.bind(this);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.searchDistinctSong = this.searchDistinctSong.bind(this);\n  }\n  /*handleClick(event) {\r\n    this.setState({ [event.target.name]: '' });\r\n  }*/\n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  searchDistinctSong(event) {\n    this.getSongDistinct(this.state.songTitle);\n    alert('A search was submitted: for distinct songs with the title ' + this.state.songTitle);\n    event.preventDefault();\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.searchDistinctSong,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Search for a Distinct Song\"), React.createElement(\"input\", {\n      name: \"songTitle\",\n      placeholder: \"Search for a distinct Song ...\",\n      className: \"field\",\n      type: \"text\",\n      value: this.state.songTitle //onClick={this.handleClick}\n      ,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"button\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(ListGroup, {\n      name: \"distinctSongList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.distinctSongList.length === 0 && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"No Songs Queried\"), this.state.distinctSongList.map((year, i) => React.createElement(\"p\", {\n      key: this.state.distinctSongList[i],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, year, \" \")), \">\"))));\n  }\n\n}\n\nexport default DistinctSongSearchBar;","map":{"version":3,"sources":["C:\\Users\\Liam\\Desktop\\create-react-app-master\\create-react-app-master\\my-app\\client\\src\\components\\DistinctSongSearchBar.js"],"names":["React","Container","Navbar","NavbarBrand","Row","Jumbotron","InputGroup","InputGroupAddon","Button","FormGroup","ListGroup","ListGroupItem","Input","Col","DistinctSongSearchBar","Component","constructor","props","getSongDistinct","songTitle","fetch","then","res","json","distinctSongList","map","val","i","song_title","artist_name","year","duration","popularity","dancename","dancestyle","album_title","setState","state","handleChange","bind","searchDistinctSong","event","target","name","value","alert","preventDefault","componentDidMount","render","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../styleSheets/DistinctSongSearchBar.css';\r\n\r\nimport {\r\n  Container,\r\n  Navbar,\r\n  NavbarBrand,\r\n  Row,\r\n  Jumbotron,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Button,\r\n  FormGroup,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Input,\r\n  Col\r\n} from 'reactstrap';\r\n\r\nclass DistinctSongSearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      songTitle: '',\r\n      distinctSongList: []\r\n    };\r\n\r\n    //this.handleClick = this.handleClick.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.searchDistinctSong = this.searchDistinctSong.bind(this);\r\n  }\r\n\r\n\r\n\r\n  /*handleClick(event) {\r\n    this.setState({ [event.target.name]: '' });\r\n  }*/\r\n\r\n  handleChange(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n\r\n  getSongDistinct = (songTitle) => {\r\n    fetch(`/api/song/distinct/${songTitle}`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      var distinctSongList = res.map((val, i, res) => {\r\n\r\n        return [\"Song Title: \" + val.song_title + \", \", \"Artist: \" + val.artist_name + \", \",\r\n                \"Release Year: \" + val.year + \", \", \"Duration: \" + val.duration + \", \",\r\n                \"Popularity: \" + val.popularity + \", \", \"Dance: \" + val.dancename + \", \",\r\n                \"Dance Style: \" + val.dancestyle + \", \", \"Album: \" + val.album_title];\r\n      });\r\n      this.setState({ distinctSongList });\r\n    });\r\n  }\r\n\r\n  searchDistinctSong(event) {\r\n\r\n    this.getSongDistinct(this.state.songTitle);\r\n    alert(\r\n      'A search was submitted: for distinct songs with the title ' + this.state.songTitle\r\n    );\r\n    event.preventDefault();\r\n  }\r\n\r\n  componentDidMount () {\r\n    \r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.searchDistinctSong}>\r\n          <h2>Search for a Distinct Song</h2>\r\n          <input\r\n              name=\"songTitle\"\r\n              placeholder=\"Search for a distinct Song ...\"\r\n              className=\"field\"\r\n              type=\"text\"\r\n              value={this.state.songTitle}\r\n              //onClick={this.handleClick}\r\n              onChange={this.handleChange}\r\n            />\r\n            <input className=\"button\" type=\"submit\" value=\"Submit\" />\r\n            <ListGroup name=\"distinctSongList\">\r\n              <ListGroupItem>\r\n                  { this.state.distinctSongList.length === 0 && <p>No Songs Queried</p> }\r\n                  { this.state.distinctSongList.map((year, i) => <p key={this.state.distinctSongList[i]}>{year} </p>) }>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DistinctSongSearchBar;"]},"metadata":{},"sourceType":"module"}