{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liam\\\\Desktop\\\\create-react-app-master\\\\create-react-app-master\\\\my-app\\\\client\\\\src\\\\components\\\\DancesOnAlbumSearchBar.js\";\nimport React from 'react';\nimport '../styleSheets/DancesOnAlbumSearchBar.css';\nimport { Container, Navbar, NavbarBrand, Row, Jumbotron, InputGroup, InputGroupAddon, Button, FormGroup, ListGroup, ListGroupItem, Input, Col } from 'reactstrap';\n\nclass DancesOnAlbumSearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAlbumSongs = albumTitle => {\n      fetch(\"/api/song/album/\".concat(albumTitle)).then(res => res.json()).then(res => {\n        var danceList = res.map((val, i, res) => {\n          return [\"Song: \" + val.song_title + \", \", \"Dance: \" + val.Dance];\n        });\n        this.setState({\n          danceList\n        });\n      });\n    };\n\n    this.state = {\n      danceList: [],\n      albumTitle: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.findSongsOnAlbum = this.findSongsOnAlbum.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  findSongsOnAlbum(event) {\n    this.getAlbumSongs(this.state.albumTitle);\n    alert('A search was submitted: Album Title: ' + this.state.albumTitle);\n    event.preventDefault();\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Find Dances on an Album \"), React.createElement(\"form\", {\n      onSubmit: this.findSongsOnAlbum,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"albumTitle\",\n      value: this.state.albumTitle,\n      placeholder: \"Enter an album title ...\",\n      type: \"text\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Input, {\n      className: \"button\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(ListGroup, {\n      name: \"danceList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.danceList.length === 0 && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Dances not Assessed on any Album\"), this.state.danceList.map((dance, i) => React.createElement(\"p\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, dance, \" \")), \">\")));\n  }\n\n}\n\nexport default DancesOnAlbumSearchBar;","map":{"version":3,"sources":["C:\\Users\\Liam\\Desktop\\create-react-app-master\\create-react-app-master\\my-app\\client\\src\\components\\DancesOnAlbumSearchBar.js"],"names":["React","Container","Navbar","NavbarBrand","Row","Jumbotron","InputGroup","InputGroupAddon","Button","FormGroup","ListGroup","ListGroupItem","Input","Col","DancesOnAlbumSearchBar","Component","constructor","props","getAlbumSongs","albumTitle","fetch","then","res","json","danceList","map","val","i","song_title","Dance","setState","state","handleChange","bind","findSongsOnAlbum","event","target","name","value","alert","preventDefault","componentDidMount","render","length","dance"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../styleSheets/DancesOnAlbumSearchBar.css';\r\n\r\nimport {\r\n  Container,\r\n  Navbar,\r\n  NavbarBrand,\r\n  Row,\r\n  Jumbotron,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Button,\r\n  FormGroup,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Input,\r\n  Col\r\n} from 'reactstrap';\r\n\r\nclass DancesOnAlbumSearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        danceList: [],\r\n        albumTitle: '',\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.findSongsOnAlbum = this.findSongsOnAlbum.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n\r\n  findSongsOnAlbum(event) {\r\n\r\n    this.getAlbumSongs(this.state.albumTitle);\r\n\r\n    alert(\r\n        'A search was submitted: Album Title: ' + this.state.albumTitle\r\n    );\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  getAlbumSongs = (albumTitle) => {\r\n      fetch(`/api/song/album/${albumTitle}`)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n      var danceList = res.map((val, i, res) => {\r\n\r\n        return [\"Song: \" + val.song_title + \", \", \"Dance: \" + val.Dance];\r\n      });\r\n      this.setState({ danceList });\r\n    });\r\n  }\r\n\r\n  componentDidMount () {\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <h2>Find Dances on an Album </h2>\r\n            <form onSubmit={this.findSongsOnAlbum}>\r\n                <Input name=\"albumTitle\" value={this.state.albumTitle} placeholder=\"Enter an album title ...\" type=\"text\" onChange={this.handleChange}/>\r\n                <Input className=\"button\" type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n            <ListGroup name=\"danceList\">\r\n              <ListGroupItem>\r\n                  { this.state.danceList.length === 0 && <p>Dances not Assessed on any Album</p> }\r\n                  { this.state.danceList.map((dance, i) => <p key={i}>{dance} </p>) }>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DancesOnAlbumSearchBar;"]},"metadata":{},"sourceType":"module"}